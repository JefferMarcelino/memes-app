services:
  db:
    image: postgres:15-alpine
    container_name: memes-db
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    # ports:
    #   - "${DATABASE_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - memes-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.13
    container_name: es-container
    environment:
      - discovery.type=single-node
    # ports:
    #   - "${ELASTICSEARCH_PORT}:9200"
    networks:
      - memes-network

  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: memes-backend
    restart: always
    ports:
      - "3005:3000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      CLOUDFLARE_R2_ACCESS_KEY: ${CLOUDFLARE_R2_ACCESS_KEY}
      CLOUDFLARE_R2_SECRET_KEY: ${CLOUDFLARE_R2_SECRET_KEY}
      CLOUDFLARE_R2_BUCKET: ${CLOUDFLARE_R2_BUCKET}
      CLOUDFLARE_R2_ENDPOINT: ${CLOUDFLARE_R2_ENDPOINT}
      CLOUDFLARE_R2_PUBLIC_URL: ${CLOUDFLARE_R2_PUBLIC_URL}
      ELASTICSEARCH_NODE_URL: ${ELASTICSEARCH_NODE_URL}
    # volumes:
    #   - ./src:/usr/src/app/src
    depends_on:
      - db
      - elasticsearch
    networks:
      - memes-network

networks:
  memes-network:
    driver: bridge

volumes:
  postgres_data:
