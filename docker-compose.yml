services:
  db:
    image: postgres:15-alpine
    container_name: memes-db
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - memes-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.13
    container_name: es-container
    environment:
      - discovery.type=single-node
    ports:
      - "${ELASTICSEARCH_PORT}:9200"
    networks:
      - memes-network

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: memes-backend
    restart: always
    ports:
      - "${BACKEND_PORT}:3000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      UPLOAD_PUBLIC_URL: ${UPLOAD_PUBLIC_URL}
      ELASTICSEARCH_NODE_URL: ${ELASTICSEARCH_NODE_URL}
    volumes:
      - ./apps/backend/src:/usr/src/app/src
      - ./apps/backend/prisma:/usr/src/app/prisma
      - ./apps/backend/uploads:/usr/src/app/uploads
    depends_on:
      - db
      - elasticsearch
    networks:
      - memes-network

  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: memes-web
    restart: always
    ports:
      - "${FRONTEND_PORT}:3000"
    environment:
      NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL}
    volumes:
      - ./apps/web/src:/usr/src/app/src
      - ./apps/web/public:/usr/src/app/public
      - ./apps/web/tailwind.config.ts:/usr/src/app/tailwind.config.ts
      - ./apps/web/next.config.ts:/usr/src/app/next.config.ts
    depends_on:
      - db
      - elasticsearch
      - backend
    networks:
      - memes-network

networks:
  memes-network:
    driver: bridge

volumes:
  postgres_data:
